services:
  backend:
    build: ./backend
    ports:
      - "${BACKEND_FASTAPI_PORT}:8000"
    environment:
      - DB_HOST=db
      - DB_NAME=${POSTGRES_DB}
      - DB_USER=${POSTGRES_USER}
      - DB_PASS=${POSTGRES_PASSWORD}
    depends_on:
      db:
        condition: service_healthy
    networks: [mnist-net]

  frontend:
    build: ./frontend
    ports:
      - "${FRONTEND_STREAMLIT_PORT}:8501"
    environment:
      - BACKEND_URL=http://backend:8000/predict
    depends_on: [backend]
    networks: [mnist-net]

  db:
    image: postgres:16-alpine
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 3s
      retries: 5
    networks: [mnist-net]

networks:
  mnist-net:
    driver: bridge

volumes:
  pgdata:
